<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Webpack on /dump</title>
    <link>http://blog.danielcefram.com/tags/webpack/</link>
    <description>Recent content in Webpack on /dump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;http://danielcefram.com&#34;&gt;Daniel Cefram&lt;/a&gt; 2017</copyright>
    <lastBuildDate>Sat, 18 Mar 2017 03:26:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.danielcefram.com/tags/webpack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Easily turn your app to Progressive Web Apps through webpack plugins</title>
      <link>http://blog.danielcefram.com/blog/easily-turn-your-app-to-progressive-web-apps-through-webpack-plugins/</link>
      <pubDate>Sat, 18 Mar 2017 03:26:00 +0000</pubDate>
      
      <guid>http://blog.danielcefram.com/blog/easily-turn-your-app-to-progressive-web-apps-through-webpack-plugins/</guid>
      <description>If ever we wanted our WebApp available even if the user does not have any internet connection, we would need to use service workers. But the thing with service workers is that they&amp;rsquo;re not &amp;ldquo;easy&amp;rdquo; to implement. It&amp;rsquo;s a good thing though that the GoogleChrome team released a node module that would generate the service worker code for your project: sw-precache.
You can use that node module in your gulp file when building/bundling your app.</description>
    </item>
    
  </channel>
</rss>
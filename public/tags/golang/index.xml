<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on /dump</title>
    <link>http://blog.danielcefram.com/tags/golang/</link>
    <description>Recent content in Golang on /dump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;http://danielcefram.com&#34;&gt;Daniel Cefram&lt;/a&gt; 2017</copyright>
    <lastBuildDate>Sat, 04 Nov 2017 21:31:38 +0800</lastBuildDate>
    
	<atom:link href="http://blog.danielcefram.com/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Stuffs that I dislike about Go</title>
      <link>http://blog.danielcefram.com/blog/stuffs-that-i-dislike-about-go/</link>
      <pubDate>Sat, 04 Nov 2017 21:31:38 +0800</pubDate>
      
      <guid>http://blog.danielcefram.com/blog/stuffs-that-i-dislike-about-go/</guid>
      <description>Error handling I should admit that I used to like Go&amp;rsquo;s idea of error handling, wherein errors are treated as values. I also thought that forcing developers to handle each possible error points immediately was a good thing, rather than moving all of the code into a try catch block.
But recently, while working on one of our project&amp;rsquo;s internal tools, I came to grow tired of Go&amp;rsquo;s error handling.</description>
    </item>
    
  </channel>
</rss>